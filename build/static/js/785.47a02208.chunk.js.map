{"version":3,"file":"static/js/785.47a02208.chunk.js","mappings":"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","sources":["component/pages_admin/Layout/products/ImportProduct.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    bulkProductUpload,\r\n    downloadDemoIdsSheet,\r\n    downloadDemoProductSheet,\r\n} from \"../../../../apis/adminApis\";\r\nimport { useState } from \"react\";\r\nimport {\r\n    spinnerOverlayOffFn,\r\n    spinnerOverlayOnFn,\r\n} from \"../../../../Redux/ReducerAction\";\r\nimport { useToast } from \"@chakra-ui/react\";\r\nconst ImportProduct = ({ tokenReducer }) => {\r\n    const toast = useToast();\r\n    const [csvFile, setCsvFile] = useState(null);\r\n    const dispatch = useDispatch();\r\n\r\n    const downloadProductXlsx = async () => {\r\n        await downloadDemoProductSheet(tokenReducer)\r\n            .then((res) => {\r\n                let blob = res.data;\r\n                const url = window.URL.createObjectURL(new Blob([blob]));\r\n                const link = document.createElement(\"a\");\r\n                link.href = url;\r\n                link.setAttribute(\"download\", `Sample-Product-Import.xlsx`);\r\n\r\n                // Append to html link element page\r\n                document.body.appendChild(link);\r\n\r\n                // Start download\r\n                link.click();\r\n\r\n                // Clean up and remove the link\r\n                link.parentNode.removeChild(link);\r\n                toast({\r\n                    title: \"Product Demo Sheet downloaded\",\r\n                    position: \"top\",\r\n                    status: \"success\",\r\n                    isClosable: true,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                toast({\r\n                    title: \"Error\",\r\n                    position: \"top\",\r\n                    description: err.message,\r\n                    status: \"error\",\r\n                    isClosable: true,\r\n                });\r\n            });\r\n    };\r\n\r\n    const downloadIdxXlsx = async () => {\r\n        await downloadDemoIdsSheet(tokenReducer)\r\n            .then((res) => {\r\n                let blob = res.data;\r\n                const url = window.URL.createObjectURL(new Blob([blob]));\r\n                const link = document.createElement(\"a\");\r\n                link.href = url;\r\n                link.setAttribute(\"download\", `List-Of-Ids.xlsx`);\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                link.parentNode.removeChild(link);\r\n                toast({\r\n                    title: \"Ids downloaded\",\r\n                    position: \"top\",\r\n                    status: \"success\",\r\n                    isClosable: true,\r\n                });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                toast({\r\n                    title: \"Error\",\r\n                    position: \"top\",\r\n                    description: err.message,\r\n                    status: \"error\",\r\n                    isClosable: true,\r\n                });\r\n            });\r\n    };\r\n\r\n    let num = 0;\r\n    function myTimer() {\r\n        console.log(num++);\r\n    }\r\n\r\n    const csvUpload = async () => {\r\n        if (csvFile !== null) {\r\n            // console.log(csvFile);\r\n            let formData = new FormData();\r\n            formData.append(\"csv\", csvFile);\r\n            dispatch(spinnerOverlayOnFn());\r\n            // const myInterval = setInterval(myTimer, 1000);\r\n            await bulkProductUpload(formData, tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    // clearInterval(myInterval);\r\n                    toast({\r\n                        title: \"CSV upload\",\r\n                        position: \"top\",\r\n                        description: res.data.message,\r\n                        status: \"success\",\r\n                        isClosable: true,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    // clearInterval(myInterval);\r\n                    toast({\r\n                        title: \"Bad request\",\r\n                        position: \"top\",\r\n                        description: err.response.data.message,\r\n                        status: \"error\",\r\n                        isClosable: true,\r\n                    });\r\n                });\r\n            // clearInterval(myInterval);\r\n            dispatch(spinnerOverlayOffFn());\r\n        } else {\r\n            toast({\r\n                title: \"Please select a csv File\",\r\n                position: \"top\",\r\n                status: \"warning\",\r\n                isClosable: true,\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid grid-cols-6\">\r\n            <div className=\"col-start-1 col-end-3\">\r\n                <img\r\n                    src={require(\"../../../../assets/xls.png\")}\r\n                    alt=\"\"\r\n                    width={400}\r\n                />\r\n            </div>\r\n            <div className=\"col-start-3 col-end-5\">\r\n                <h1 className=\"font-bold text-lg\">Import Product via CSV</h1>\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\r\n                    className=\"border border-green-400 w-full\"\r\n                    onChange={(e) => setCsvFile(e.target.files[0])}\r\n                />\r\n                <button\r\n                    className=\"bg-blue-500 rounded px-2 py-1 mt-1 text-white font-semibold\"\r\n                    onClick={() => csvUpload()}\r\n                >\r\n                    Upload CSV File\r\n                </button>\r\n                <div className=\"border border-green-400 p-3 w-full mt-10 \">\r\n                    <h1 className=\"font-bold text-lg text-blue-500\">\r\n                        Download demo Excel Sheet\r\n                    </h1>\r\n                    <div className=\"grid grid-cols-2 mt-4 gap-5\">\r\n                        <div className=\" \">\r\n                            <span className=\"font-bold text-xs\">\r\n                                Product Demo xlsx\r\n                            </span>\r\n                            <button\r\n                                className=\"bg-white rounded border p-1 flex items-center pe-2\"\r\n                                onClick={() => downloadProductXlsx()}\r\n                            >\r\n                                <img\r\n                                    src={require(\"../../../../assets/xls.png\")}\r\n                                    alt=\"\"\r\n                                    width={30}\r\n                                    className=\"me-2\"\r\n                                />\r\n                                Download\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"\">\r\n                            <span className=\"font-bold text-xs\">\r\n                                Ids Demo xlsx\r\n                            </span>\r\n                            <button\r\n                                className=\"bg-white rounded border p-1 flex items-center pe-2\"\r\n                                onClick={() => downloadIdxXlsx()}\r\n                            >\r\n                                <img\r\n                                    src={require(\"../../../../assets/xls.png\")}\r\n                                    alt=\"\"\r\n                                    width={30}\r\n                                    className=\"me-2\"\r\n                                />\r\n                                Download\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImportProduct;\r\n"],"names":["_ref","tokenReducer","toast","useToast","_useState","useState","_useState2","_slicedToArray","csvFile","setCsvFile","dispatch","useDispatch","downloadProductXlsx","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","downloadDemoProductSheet","then","res","blob","data","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","title","position","status","isClosable","catch","err","console","log","description","message","stop","apply","arguments","downloadIdxXlsx","_ref3","_callee2","_context2","downloadDemoIdsSheet","csvUpload","_ref4","_callee3","formData","_context3","FormData","append","spinnerOverlayOnFn","bulkProductUpload","response","spinnerOverlayOffFn","_jsxs","className","children","_jsx","src","require","alt","width","type","accept","onChange","e","target","files","onClick"],"sourceRoot":""}