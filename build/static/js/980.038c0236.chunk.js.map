{"version":3,"file":"static/js/980.038c0236.chunk.js","mappings":"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","sources":["component/pages_admin/Layout/Tag.jsx","component/pages_admin/Layout/products/ProductCreate.jsx"],"sourcesContent":["import React from 'react'\r\nimport {IoCloseSharp} from 'react-icons/io5'\r\n\r\nconst Tag = ({tag, onClick}) => {\r\n  \r\n  return (\r\n    <div className='bg-[#38c65c] dark:bg-[#00000096] mb-[1px] me-[1px] text-white w-fit px-2 rounded-full flex items-center justify-betweena'>\r\n      <span>{tag}</span>\r\n      <button className='ms-2  border-s ps-2'><IoCloseSharp size={20} onClick={() => onClick()}/></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tag","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Menu, useToast } from \"@chakra-ui/react\";\r\nimport { ChevronDownIcon } from \"@chakra-ui/icons\";\r\nimport { FaCloudUploadAlt } from \"react-icons/fa\";\r\nimport { BsFillSquareFill } from \"react-icons/bs\";\r\nimport { Button, MenuButton, MenuItemOption, MenuList, MenuOptionGroup } from \"@chakra-ui/react\";\r\nimport { createProductApi, getAllBrandApi, getAllBrandByVendorApi, getAllCategoryApi, getAllColorApi, getAllVentorApi } from \"../../../../apis/adminApis\";\r\nimport { spinnerOverlayOffFn, spinnerOverlayOnFn } from \"../../../../Redux/ReducerAction\";\r\nimport { MdOutlinePlaylistAdd, MdDeleteForever } from \"react-icons/md\";\r\nimport { Select, useChakraSelectProps } from \"chakra-react-select\";\r\nimport Tag from \"../Tag\";\r\n\r\nconst ProductCreate = ({ userInfoReducer, tokenReducer }) => {\r\n    const dispatch = useDispatch();\r\n    const toast = useToast();\r\n    const [thumbnailImg, setThumbnail] = useState(null);\r\n    const [thumbnailUrl, setThumbnailUrl] = useState(null);\r\n    const [imgOrLink, setImgOrLink] = useState(false);\r\n    const [multipleImages, setMultipleImages] = useState({\r\n        urls: [],\r\n        files: \"\",\r\n        singleImageUrl: \"\",\r\n    });\r\n    const [catData, setCatData] = useState([]);\r\n    const [colorData, setColorData] = useState([]);\r\n    const [categoryIdx, setCategoryIdx] = useState(null);\r\n    const [brandData, setBrandData] = useState([]);\r\n    const [filteredBrandData, setFilteredBrandData] = useState([]);\r\n    const [vendorData, setVendorData] = useState([]);\r\n    const [productMargin, setProductMargin] = useState(0);\r\n    const [sellingGst, setSellingGst] = useState(0);\r\n    const [brandIdx, setBrandIdx] = useState(null);\r\n    const [tagInputString, setTagInputString] = useState(\"\");\r\n    const [tags, setTags] = useState([]);\r\n    const [productField, setProductField] = useState({\r\n        product_name: \"\",\r\n        sku_code: \"\",\r\n        hsn_code: \"\",\r\n        brandId: \"\",\r\n        color: [],\r\n        categoryId: \"\",\r\n        subCatId: \"\",\r\n        stockStatus: \"In_stock\",\r\n        lotSizeQty: [],\r\n        mrp: 0,\r\n        seller_price: 0,\r\n        gst: 0,\r\n        qty_in_hand: 0,\r\n        min_order_qty: 0,\r\n        sole: \"\",\r\n        material: \"\",\r\n        packing_type: \"\",\r\n        made_in: \"India\",\r\n        weight: \"\",\r\n        description: \"\",\r\n    });\r\n\r\n    const [metaData, setMetaData] = useState({\r\n        metaTitle: \"\",\r\n        metaKeyword: \"\",\r\n        metaDescription: \"\",\r\n    });\r\n    const [vendorid, setVendorid] = useState(\"\");\r\n    const [bestSellingNewArrival, setBestSellingNewArrival] = useState({\r\n        bestSelling: false,\r\n        newArrival: false,\r\n    });\r\n    const vendorSelectChange = (el) => {\r\n        setVendorid(el);\r\n        console.log(brandData)\r\n        let x = brandData.filter((o) => {\r\n            if (o.vendor_id._id === el.value) {\r\n                return o;\r\n            }\r\n        });\r\n        setFilteredBrandData((old) => x);\r\n        setProductMargin((old) => el.margin);\r\n    };\r\n    const selectProps = useChakraSelectProps({\r\n        value: vendorid,\r\n        onChange: vendorSelectChange,\r\n    });\r\n    const inputFn = () => {\r\n        document.getElementById(\"thumbnailInput\").click();\r\n    };\r\n    const options = document.querySelectorAll(\"li\");\r\n    for (let i = 0; i < options.length; i++) {\r\n        options[i].onclick = () => {\r\n            document.activeElement.blur();\r\n        };\r\n    }\r\n\r\n    const handleThumbUpload = (e) => {\r\n        if (e.target.files) {\r\n            setThumbnail(e.target.files[0]);\r\n        } else {\r\n            setThumbnailUrl(e.target.value);\r\n        }\r\n    };\r\n    const setImgFn = () => {\r\n        if (imgOrLink && thumbnailUrl !== null) {\r\n            if (thumbnailUrl.slice(0, 4).toLocaleLowerCase() === \"http\") {\r\n                setThumbnail(thumbnailUrl);\r\n            } else {\r\n                toast({\r\n                    title: \"Please provide a valid image url\",\r\n                    position: \"top\",\r\n                    status: \"warning\",\r\n                    isClosable: true,\r\n                });\r\n                setThumbnailUrl(\"\");\r\n            }\r\n        }\r\n    };\r\n    const toggleBtn = (flag) => {\r\n        setImgOrLink(flag);\r\n        setThumbnail(null);\r\n        setThumbnailUrl(null);\r\n    };\r\n    const brandHandler = (index) => {\r\n        if (index > 0) {\r\n            setBrandIdx(index - 1);\r\n        } else {\r\n            setBrandIdx(null);\r\n        }\r\n    };\r\n    const categoryHandler = (index) => {\r\n        if (index > 0) {\r\n            setCategoryIdx(index - 1);\r\n        } else {\r\n            setCategoryIdx(null);\r\n        }\r\n    };\r\n\r\n    const getAllBrands = async () => {\r\n        if (userInfoReducer.userType === \"Seller\") {\r\n            await getAllBrandByVendorApi(userInfoReducer.vendorId, tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setFilteredBrandData(res.data.data);\r\n                    setBrandData(res.data.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        } else {\r\n            await getAllBrandApi(tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    setBrandData(res.data.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    };\r\n    const getAllCategory = async () => {\r\n        console.log(\"get all category fired\");\r\n        dispatch(spinnerOverlayOnFn());\r\n        await getAllCategoryApi()\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setCatData(res.data.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        dispatch(spinnerOverlayOffFn());\r\n    };\r\n    const getAllVendors = async () => {\r\n        if (userInfoReducer.userType === \"Admin\" || userInfoReducer.userType === \"Super Admin\") {\r\n            dispatch(spinnerOverlayOnFn());\r\n            await getAllVentorApi(tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    let arr = [];\r\n                    for (let resD of res.data.data) {\r\n                        if (resD.marginInPercentage && resD.marginInPercentage > 0) {\r\n                            arr.push({\r\n                                label: resD.firmName,\r\n                                value: resD._id,\r\n                                margin: resD.marginInPercentage,\r\n                            });\r\n                        }\r\n                    }\r\n                    console.log(arr);\r\n                    setVendorData(arr);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n            dispatch(spinnerOverlayOffFn());\r\n        }\r\n    };\r\n    const callDemo = () => {\r\n        console.log(\"call demo\");\r\n    };\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === \"Enter\") {\r\n            setTags((preState) => {\r\n                return [...preState, tagInputString];\r\n            });\r\n            setTagInputString(\"\");\r\n        }\r\n    };\r\n\r\n    const addProductFn = async () => {\r\n        console.log(productField);\r\n        productField.lotSizeQty = tags;\r\n        if (filteredBrandData[brandIdx]) {\r\n            productField.brandId = filteredBrandData[brandIdx]._id;\r\n        }\r\n        if (catData[categoryIdx]) {\r\n            productField.categoryId = catData[categoryIdx]._id;\r\n        }\r\n        // if (selectedColor.colorHex !== \"\" && selectedColor.colorName !== \"\") {\r\n        //     productField.color = selectedColor.color_id;\r\n        // }\r\n\r\n        let formData = new FormData();\r\n        for (let productKey in productField) {\r\n            if (productKey === \"lotSizeQty\" || productKey === \"color\") {\r\n                formData.append(productKey, JSON.stringify(productField[productKey]));\r\n            } else {\r\n                formData.append(productKey, productField[productKey]);\r\n            }\r\n        }\r\n        formData.append(\"thumbnail\", thumbnailImg);\r\n        if (multipleImages.files.length > 0) {\r\n            for (let val of multipleImages.files) {\r\n                console.log(val);\r\n                formData.append(\"mulImg\", val);\r\n            }\r\n        } else if (multipleImages.urls.length > 0) {\r\n            for (let val of multipleImages.urls) {\r\n                console.log(val);\r\n                formData.append(\"mulImg\", val);\r\n            }\r\n        }\r\n        formData.append(\"meta\", JSON.stringify(metaData));\r\n        console.log('first 243')\r\n        if (userInfoReducer.userType === \"Admin\" || userInfoReducer.userType === \"Super Admin\") {\r\n            if (productMargin > 0 && sellingGst > 0) {\r\n                formData.append(\"margin\", productMargin);\r\n                formData.append(\"sellingGST\", sellingGst);\r\n                formData.append(\"vendor_id\", vendorid.value);\r\n                console.log('best Selling', bestSellingNewArrival)\r\n                formData.append(\"best_arrival\", JSON.stringify(bestSellingNewArrival));\r\n                dispatch(spinnerOverlayOnFn());\r\n                \r\n                await createProductApi(formData, tokenReducer)\r\n                    .then((res) => {\r\n                        console.log(res.data);\r\n                        toast({\r\n                            title: \"Product Created Successfully\",\r\n                            position: \"top\",\r\n                            status: \"success\",\r\n                            isClosable: true,\r\n                        });\r\n                    })\r\n                    .catch((err) => {\r\n                        console.log(err);\r\n                        toast({\r\n                            title: \"Error\",\r\n                            description: err.response.data.message,\r\n                            position: \"top\",\r\n                            status: \"error\",\r\n                            isClosable: true,\r\n                        });\r\n                    });\r\n                dispatch(spinnerOverlayOffFn());\r\n            } else {\r\n                toast({\r\n                    title: \"Margin and selling gst are required\",\r\n                    position: \"top\",\r\n                    status: \"warning\",\r\n                    isClosable: true,\r\n                });\r\n            }\r\n        } else {\r\n            dispatch(spinnerOverlayOnFn());\r\n            await createProductApi(formData, tokenReducer)\r\n                .then((res) => {\r\n                    console.log(res.data);\r\n                    toast({\r\n                        title: \"Product Created Successfully\",\r\n                        position: \"top\",\r\n                        status: \"success\",\r\n                        isClosable: true,\r\n                    });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                    toast({\r\n                        title: \"Error\",\r\n                        description: err.response.data.message,\r\n                        position: \"top\",\r\n                        status: \"error\",\r\n                        isClosable: true,\r\n                    });\r\n                });\r\n            dispatch(spinnerOverlayOffFn());\r\n        }\r\n    };\r\n\r\n    const cancelProductFn = () => {\r\n        if (window.confirm(\"Are you want to cancel this product\")) {\r\n            setProductField({\r\n                product_name: \"\",\r\n                sku_code: \"\",\r\n                hsn_code: \"\",\r\n                brandId: \"\",\r\n                color: \"\",\r\n                categoryId: \"\",\r\n                subCatId: \"\",\r\n                stockStatus: \"In_stock\",\r\n                lotSizeQty: [],\r\n                mrp: 0,\r\n                gst: 0,\r\n                seller_price: 0,\r\n                qty_in_hand: 0,\r\n                min_order_qty: 0,\r\n                sole: \"\",\r\n                material: \"\",\r\n                packing_type: \"\",\r\n                made_in: \"\",\r\n                weight: \"\",\r\n                description: \"\",\r\n            });\r\n            setSellingGst((old) => 0);\r\n            setProductMargin((old) => 0);\r\n            setBestSellingNewArrival({ bestSelling: false, newArrival: false });\r\n            setBrandIdx((old) => null);\r\n            setCategoryIdx((old) => null);\r\n            setMultipleImages({\r\n                urls: [],\r\n                files: \"\",\r\n                singleImageUrl: \"\",\r\n            });\r\n            setMetaData({\r\n                metaTitle: \"\",\r\n                metaKeyword: \"\",\r\n                metaDescription: \"\",\r\n            });\r\n            setVendorid(\"\");\r\n        }\r\n    };\r\n\r\n    const getAllColor = async () => {\r\n        dispatch(spinnerOverlayOnFn());\r\n        await getAllColorApi()\r\n            .then((res) => {\r\n                setColorData(res.data.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n                alert(\"Error occurred!\");\r\n            });\r\n        dispatch(spinnerOverlayOffFn());\r\n    };\r\n\r\n    const removeTag = (index) => {\r\n        let arr;\r\n        setTags((old) => {\r\n            arr = [...old];\r\n            arr.splice(index, 1);\r\n            return arr;\r\n        });\r\n        console.log(\"first\");\r\n    };\r\n    const multipleImagehandler = (method, index) => {\r\n        if (method === \"DEL\") {\r\n            let arr = [];\r\n            setMultipleImages((old) => {\r\n                arr = old.urls;\r\n                arr.splice(index, 1);\r\n                return { urls: arr, files: \"\", singleImageUrl: \"\" };\r\n            });\r\n        } else if (method === \"ADD\") {\r\n            if (multipleImages.singleImageUrl.slice(0, 4).toLocaleLowerCase() === \"http\") {\r\n                let arr = [];\r\n                setMultipleImages((old) => {\r\n                    arr = old.urls;\r\n                    arr.push(old.singleImageUrl);\r\n                    return { urls: arr, files: \"\", singleImageUrl: \"\" };\r\n                });\r\n            } else {\r\n                alert(\"Please provide a valid image url\");\r\n                let arr = [];\r\n                setMultipleImages((old) => {\r\n                    arr = old.urls;\r\n                    return { urls: arr, files: \"\", singleImageUrl: \"\" };\r\n                });\r\n            }\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        // console.log(userInfoReducer)\r\n        getAllBrands();\r\n        getAllCategory();\r\n        getAllVendors();\r\n        getAllColor();\r\n        setTags([]);\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"flex\">\r\n            <div className=\"flex-1 me-24\">\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    <div className={`col-span-2`}>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Product Name</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Product Name\"\r\n                            value={productField.product_name}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        product_name: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">SKU code</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"SKU code\"\r\n                            value={productField.sku_code}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, sku_code: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">HSN code</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"HSN code\"\r\n                            value={productField.hsn_code}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, hsn_code: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Brand</h1>\r\n                        <select\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            onChange={(e) => brandHandler(e.target.selectedIndex)}\r\n                            className=\"outline-none rounded-md border px-3 py-2  w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        >\r\n                            <option value=\"\">Select Brand</option>\r\n                            {filteredBrandData.length > 0 &&\r\n                                filteredBrandData.map((el, i) => (\r\n                                    <option key={`${el._id}`} value={el.brand_name}>\r\n                                        {el.brand_name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Color</h1>\r\n                        <div tabIndex=\"0\" className=\"group relative inline-block w-full\">\r\n                            <Menu closeOnSelect={false}>\r\n                                <MenuButton fontWeight={400} className=\"text-start\" width={\"full\"} bg={\"white\"} variant={\"outline\"} as={Button} rightIcon={<ChevronDownIcon />}>\r\n                                    Colors\r\n                                </MenuButton>\r\n                                <MenuList minWidth=\"240px\">\r\n                                    <MenuOptionGroup\r\n                                        className=\"ps-0\"\r\n                                        type=\"checkbox\"\r\n                                        onChange={(e) =>\r\n                                            setProductField((old) => {\r\n                                                return { ...old, color: e };\r\n                                            })\r\n                                        }\r\n                                    >\r\n                                        {colorData.map((el, i) => (\r\n                                            <MenuItemOption key={el._id} value={el._id}>\r\n                                                <div className=\"flex items-center space-x-2\">\r\n                                                    <BsFillSquareFill color={el.colorHex} />\r\n                                                    <span>{el.colorName}</span>\r\n                                                </div>\r\n                                            </MenuItemOption>\r\n                                        ))}\r\n                                    </MenuOptionGroup>\r\n                                </MenuList>\r\n                            </Menu>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-3 gap-4 mb-8\">\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Category</h1>\r\n                        <select\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            onChange={(e) => categoryHandler(e.target.selectedIndex)}\r\n                            className=\"outline-none border rounded-md px-3 py-2  w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        >\r\n                            <option value=\"\">Select Category</option>\r\n                            {catData.length > 0 &&\r\n                                catData.map((el, i) => (\r\n                                    <option value=\"\" key={el._id}>\r\n                                        {el.category_name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Sub Category</h1>\r\n                        <select\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            onChange={(e) =>\r\n                                setProductField((preState) => {\r\n                                    return {\r\n                                        ...preState,\r\n                                        subCatId: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md px-3 py-2  w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        >\r\n                            <option value=\"\">Select SubCategory</option>\r\n                            {categoryIdx !== null &&\r\n                                catData[categoryIdx].sub_category.map((el) => (\r\n                                    <option value={el._id} key={el._id}>\r\n                                        {el.subcategory_name}\r\n                                    </option>\r\n                                ))}\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Stock status</h1>\r\n                        <select\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            value={productField.stockStatus}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        stockStatus: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md px-3 py-2  w-full dark:bg-[#424242] dark:border-[#424242]\"\r\n                        >\r\n                            <option value=\"In_stock\">In Stock</option>\r\n                            <option value=\"Out_of_stock\">Out Off Stock</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Lot Size / Quantity</h1>\r\n                    <div className=\"rounded-md bg-white p-2 w-full mb-8 border dark:bg-[#424242] dark:border-[#424242] flex flex-wrap\">\r\n                        {tags.map((e, i) => (\r\n                            <Tag key={`${i}_tags`} tag={e} onClick={() => removeTag(i)} />\r\n                        ))}\r\n                        <input\r\n                            type=\"text\"\r\n                            value={tagInputString}\r\n                            className=\"outline-none flex-1 ps-1 dark:bg-[#424242]\"\r\n                            placeholder={tags.length === 0 && \"insert size and press enter\"}\r\n                            onChange={(e) => setTagInputString(e.target.value)}\r\n                            onKeyDown={handleKeyDown}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"grid grid-cols-3 gap-4\">\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">MRP</h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"MRP\"\r\n                            value={productField.mrp}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, mrp: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Seller Price</h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"Seller Price\"\r\n                            value={productField.seller_price}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        seller_price: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Seller GST in %</h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder=\"GST in %\"\r\n                            value={productField.gst}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, gst: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Total</h1>\r\n                        <input\r\n                            type=\"number\"\r\n                            disabled={true}\r\n                            placeholder=\"Selling Price\"\r\n                            value={(Number(productField.seller_price) + (Number(productField.seller_price) * Number(productField.gst)) / 100).toFixed(2)}\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    {userInfoReducer.userType === \"Admin\" ||\r\n                        (userInfoReducer.userType === \"Super Admin\" && (\r\n                            <>\r\n                                <div>\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Vendor margin</h1>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Margin\"\r\n                                        value={productMargin}\r\n                                        onChange={(e) => setProductMargin((old) => e.target.value)}\r\n                                        className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Margin + Seller Price</h1>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Margin\"\r\n                                        value={Number(productField.seller_price) + (Number(productField.seller_price) * Number(productMargin)) / 100}\r\n                                        disabled={true}\r\n                                        className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Selling GST in %</h1>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Selling GST\"\r\n                                        value={sellingGst}\r\n                                        onChange={(e) => setSellingGst((old) => e.target.value)}\r\n                                        className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Total Selling Price</h1>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Margin\"\r\n                                        disabled={true}\r\n                                        value={(\r\n                                            Number(productField.seller_price) +\r\n                                            (Number(productField.seller_price) * Number(productMargin)) / 100 +\r\n                                            ((Number(productField.seller_price) + (Number(productField.seller_price) * Number(productMargin)) / 100) * Number(sellingGst)) / 100\r\n                                        ).toFixed(2)}\r\n                                        className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                                    />\r\n                                </div>\r\n                            </>\r\n                        ))}\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">QTY in hand</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"QTY in hand\"\r\n                            value={productField.qty_in_hand}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        qty_in_hand: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Minimum Order QTY</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Minimum Order QTY\"\r\n                            value={productField.min_order_qty}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        min_order_qty: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Sole</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Sole\"\r\n                            value={productField.sole}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, sole: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Material</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"material\"\r\n                            value={productField.material}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, material: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Packing type</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Packing type\"\r\n                            value={productField.packing_type}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        packing_type: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Made in</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Made in\"\r\n                            value={productField.made_in}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, made_in: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Weight</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Weight\"\r\n                            value={productField.weight}\r\n                            onChange={(e) =>\r\n                                setProductField((old) => {\r\n                                    return { ...old, weight: e.target.value };\r\n                                })\r\n                            }\r\n                            className=\"outline-none rounded-md border p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242] \"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Description</h1>\r\n                <textarea\r\n                    type=\"text\"\r\n                    placeholder=\"summary for product\"\r\n                    value={productField.description}\r\n                    onChange={(e) =>\r\n                        setProductField((old) => {\r\n                            return { ...old, description: e.target.value };\r\n                        })\r\n                    }\r\n                    className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                />\r\n                <div className=\"p-4 rounded-md bg-[#adffd5] dark:bg-[#0a110d70] mb-8\">\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Meta Title</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Meta Title\"\r\n                            value={metaData.metaTitle}\r\n                            onChange={(e) =>\r\n                                setMetaData((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        metaTitle: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Meta Keywords</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Meta  Keywords\"\r\n                            value={metaData.metaKeyword}\r\n                            onChange={(e) =>\r\n                                setMetaData((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        metaKeyword: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Meta Description</h1>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Meta Description\"\r\n                            value={metaData.metaDescription}\r\n                            onChange={(e) =>\r\n                                setMetaData((old) => {\r\n                                    return {\r\n                                        ...old,\r\n                                        metaDescription: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                            className=\"outline-none border rounded-md p-2 w-full mb-8 dark:bg-[#424242] dark:border-[#424242]\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"flex items-center justify-start\">\r\n                    <button className=\"bg-[#4BC970] rounded-md border border-[#4BC970] px-3 py-2 text-white font-bold text-lg\" onClick={() => addProductFn()}>\r\n                        Submit\r\n                    </button>\r\n                    <button className=\"bg-[#ffffff] rounded-md px-3 py-2 ms-3 border border-[#4BC970] text-[#384047] font-bold text-lg\" onClick={() => cancelProductFn()}>\r\n                        Cancel\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {/* -------------------------------- Right side container -------------------------------- */}\r\n\r\n            <div className=\"w-[30%]\">\r\n                {(userInfoReducer.userType && userInfoReducer.userType === \"Admin\") ||\r\n                    (userInfoReducer.userType === \"Super Admin\" && (\r\n                        <div className=\"p-4 rounded-md bg-[#adffd5] dark:bg-[#0a110d70] mb-8\">\r\n                            <div>\r\n                                <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Select Vendor</h1>\r\n                                <Select className=\"bg-white\" {...selectProps} options={vendorData} />\r\n                            </div>\r\n                            <div className=\"border p-3 mt-5 bg-white rounded-md dark:bg-[#424242] dark:border-[#424242]\">\r\n                                <div className=\"flex items-center justify-between\">\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Show in Best Selling</h1>\r\n                                    <label htmlFor=\"bestSelling\" className=\"flex items-center\">\r\n                                        <span className=\"mx-1 px-3 font-bold text-blue-600 dark:text-yellow-300\">{bestSellingNewArrival.bestSelling ? \"Yes\" : \"No\"}</span>\r\n                                        <div className=\"relative\">\r\n                                            <input\r\n                                                id=\"bestSelling\"\r\n                                                type=\"checkbox\"\r\n                                                className=\"hidden\"\r\n                                                value={bestSellingNewArrival.bestSelling}\r\n                                                onChange={(e) =>\r\n                                                    setBestSellingNewArrival((prev) => {\r\n                                                        return {\r\n                                                            ...prev,\r\n                                                            bestSelling: e.target.checked,\r\n                                                        };\r\n                                                    })\r\n                                                }\r\n                                            />\r\n                                            <div className=\"toggle__line w-12 h-6 bg-gray-200 rounded-full shadow-inner\"></div>\r\n                                            <div className=\"toggle__dot absolute w-5 h-5 bg-white rounded-full shadow inset-y-0 left-0\"></div>\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                                <div className=\"mt-2 flex items-center justify-between\">\r\n                                    <h1 className=\"dark:text-white text-[#384047] font-semibold text-lg mb-1\">Show in New Arrivals</h1>\r\n                                    <label htmlFor=\"newArrivals\" className=\"flex items-center\">\r\n                                        <span className=\"mx-1 px-3 font-bold text-blue-600 dark:text-yellow-300\">{bestSellingNewArrival.newArrival ? \"Yes\" : \"No\"}</span>\r\n                                        <div className=\"relative\">\r\n                                            <input\r\n                                                id=\"newArrivals\"\r\n                                                type=\"checkbox\"\r\n                                                className=\"hidden\"\r\n                                                value={bestSellingNewArrival.newArrival}\r\n                                                onChange={(e) =>\r\n                                                    setBestSellingNewArrival((prev) => {\r\n                                                        return {\r\n                                                            ...prev,\r\n                                                            newArrival: e.target.checked,\r\n                                                        };\r\n                                                    })\r\n                                                }\r\n                                            />\r\n                                            <div className=\"toggle__line w-12 h-6 bg-gray-200 rounded-full shadow-inner\"></div>\r\n                                            <div className=\"toggle__dot absolute w-5 h-5 bg-white rounded-full shadow inset-y-0 left-0\"></div>\r\n                                        </div>\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                <div>\r\n                    <div className=\"flex items-center justify-center w-full mb-12\">\r\n                        <label htmlFor=\"toggleB\" className=\"flex items-center cursor-pointer\">\r\n                            <div className=\"me-3 text-[#384047] font-medium dark:text-white\">Image</div>\r\n                            <div className=\"relative\">\r\n                                <input type=\"checkbox\" defaultChecked={imgOrLink} id=\"toggleB\" className=\"sr-only\" onClick={(e) => toggleBtn(e.target.checked)} />\r\n\r\n                                <div className=\"block bg-gray-600 w-14 h-8 rounded-full\"></div>\r\n\r\n                                <div className=\"dot absolute left-1 top-1 bg-white w-6 h-6 rounded-full transition\"></div>\r\n                            </div>\r\n                            <div className=\"ml-3 text-[#384047] font-medium dark:text-white\">Link</div>\r\n                        </label>\r\n                    </div>\r\n                    <div className=\" border-dashed border-4 py-8 cursor-pointer px-4\" onClick={() => inputFn()}>\r\n                        {thumbnailImg && <img src={imgOrLink ? thumbnailImg : URL.createObjectURL(thumbnailImg)} alt=\"\" title=\"thumbnail Image\" />}\r\n\r\n                        <div>\r\n                            <div className={`${thumbnailImg === null && !imgOrLink ? \"flex\" : \"hidden\"} flex-col justify-center items-center`}>\r\n                                <FaCloudUploadAlt size={150} className=\"w-full text-[#683aff]\" />\r\n                                <span className=\"bg-[#683affbd] text-white font-semibold p-3 rounded-md\">Upload a product thumbnail</span>\r\n                            </div>\r\n                            <div className=\"flex justify-center items-center mt-1 w-full\">\r\n                                <input\r\n                                    type={`${imgOrLink ? \"text\" : \"file\"}`}\r\n                                    id=\"thumbnailInput\"\r\n                                    onChange={(e) => handleThumbUpload(e)}\r\n                                    autoComplete=\"off\"\r\n                                    className={`${!imgOrLink && \"hidden\"} outline-none border py-1 w-full dark:bg-[#424242] dark:border-[#424242] px-2`}\r\n                                />\r\n                                <button\r\n                                    className={`${!imgOrLink && \"hidden\"} bg-[#683aff] text-white font-semibold px-2 py-1 border border-[#683aff] dark:border-[#424242]`}\r\n                                    onClick={() => setImgFn()}\r\n                                >\r\n                                    upload\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mt-5\">\r\n                    <span className=\"mb-1\">Multiple Images</span>\r\n                    <div>\r\n                        <input\r\n                            type=\"file\"\r\n                            name=\"\"\r\n                            id=\"\"\r\n                            multiple\r\n                            className=\"border border-green-500 w-full\"\r\n                            onChange={(e) =>\r\n                                setMultipleImages({\r\n                                    urls: [],\r\n                                    files: e.target.files,\r\n                                })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center my-3\">\r\n                        <div className=\"border-b-2 w-full me-2\"></div>\r\n                        <span className=\"text-xs text-blue-500\">OR</span>\r\n                        <div className=\"border-b-2 w-full ms-2\"></div>\r\n                    </div>\r\n                    <div className=\"flex items-center\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"outline-none border border-green-500 w-full p-1\"\r\n                            placeholder=\"Image URL\"\r\n                            value={multipleImages.singleImageUrl}\r\n                            onChange={(e) =>\r\n                                setMultipleImages((preState) => {\r\n                                    return {\r\n                                        ...preState,\r\n                                        singleImageUrl: e.target.value,\r\n                                    };\r\n                                })\r\n                            }\r\n                        />\r\n                        <button className=\"border p-1 px-4 border-green-500 bg-green-500 text-white\" onClick={() => multipleImagehandler(\"ADD\")}>\r\n                            <MdOutlinePlaylistAdd size={24} />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"mt-2\">\r\n                        {multipleImages.urls.length > 0 &&\r\n                            multipleImages.urls.map((el, i) => (\r\n                                <div className=\"flex items-center my-1\">\r\n                                    <span className=\" bg-white w-full p-1\">\r\n                                        {el.slice(0, 35)}\r\n                                        {el.length > 35 && \"...\"}\r\n                                    </span>\r\n                                    <button className=\"p-1 px-4 bg-red-500 text-white\" onClick={() => multipleImagehandler(\"DEL\", i)}>\r\n                                        <MdDeleteForever size={24} />\r\n                                    </button>\r\n                                </div>\r\n                            ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProductCreate;\r\n"],"names":["_ref","tag","onClick","_jsxs","className","children","_jsx","IoCloseSharp","size","userInfoReducer","tokenReducer","dispatch","useDispatch","toast","useToast","_useState","useState","_useState2","_slicedToArray","thumbnailImg","setThumbnail","_useState3","_useState4","thumbnailUrl","setThumbnailUrl","_useState5","_useState6","imgOrLink","setImgOrLink","_useState7","urls","files","singleImageUrl","_useState8","multipleImages","setMultipleImages","_useState9","_useState10","catData","setCatData","_useState11","_useState12","colorData","setColorData","_useState13","_useState14","categoryIdx","setCategoryIdx","_useState15","_useState16","brandData","setBrandData","_useState17","_useState18","filteredBrandData","setFilteredBrandData","_useState19","_useState20","vendorData","setVendorData","_useState21","_useState22","productMargin","setProductMargin","_useState23","_useState24","sellingGst","setSellingGst","_useState25","_useState26","brandIdx","setBrandIdx","_useState27","_useState28","tagInputString","setTagInputString","_useState29","_useState30","tags","setTags","_useState31","product_name","sku_code","hsn_code","brandId","color","categoryId","subCatId","stockStatus","lotSizeQty","mrp","seller_price","gst","qty_in_hand","min_order_qty","sole","material","packing_type","made_in","weight","description","_useState32","productField","setProductField","_useState33","metaTitle","metaKeyword","metaDescription","_useState34","metaData","setMetaData","_useState35","_useState36","vendorid","setVendorid","_useState37","bestSelling","newArrival","_useState38","bestSellingNewArrival","setBestSellingNewArrival","selectProps","useChakraSelectProps","value","onChange","el","console","log","x","filter","o","vendor_id","_id","old","margin","options","document","querySelectorAll","i","length","onclick","activeElement","blur","getAllBrands","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","userType","getAllBrandByVendorApi","vendorId","then","res","data","catch","err","getAllBrandApi","stop","apply","arguments","getAllCategory","_ref3","_callee2","_context2","spinnerOverlayOnFn","getAllCategoryApi","spinnerOverlayOffFn","getAllVendors","_ref4","_callee3","_context3","getAllVentorApi","_step","arr","_iterator","_createForOfIteratorHelper","s","n","done","resD","marginInPercentage","push","label","firmName","e","f","addProductFn","_ref5","_callee4","formData","productKey","_iterator2","_step2","val","_iterator3","_step3","_val","_context4","FormData","append","JSON","stringify","createProductApi","title","position","status","isClosable","response","message","getAllColor","_ref6","_callee5","_context5","getAllColorApi","error","alert","multipleImagehandler","method","index","splice","slice","toLocaleLowerCase","useEffect","type","placeholder","_objectSpread","target","name","id","selectedIndex","map","brand_name","concat","tabIndex","Menu","closeOnSelect","MenuButton","fontWeight","width","bg","variant","as","Button","rightIcon","ChevronDownIcon","MenuList","minWidth","MenuOptionGroup","MenuItemOption","BsFillSquareFill","colorHex","colorName","category_name","preState","sub_category","subcategory_name","Tag","_toConsumableArray","removeTag","onKeyDown","event","key","disabled","Number","toFixed","_Fragment","window","confirm","Select","htmlFor","checked","defaultChecked","flag","getElementById","click","src","URL","createObjectURL","alt","FaCloudUploadAlt","handleThumbUpload","autoComplete","multiple","MdOutlinePlaylistAdd","MdDeleteForever"],"sourceRoot":""}